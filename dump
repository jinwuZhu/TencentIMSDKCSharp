var _video_download = (function(){
	let download_manager = {
		get platform(){
			if(this._platform === undefined) {
				if(window.document.domain.indexOf("youtube.com") >= 0){
					this._platform = "youtube";
				}
				else{
					this._platform = null;
				}
			}
			return this._platform;
		},
		get formats(){
			if(this._formats == null)
			{
				if(this.platform == null){
					return null;
				}
				let resultFmts = [];
				if(this.platform == "youtube")
				{
					let fmts = ytInitialPlayerResponse?.streamingData?.adaptiveFormats;
					if(fmts === undefined)
					{
						return resultFmts;
					}
					for (let i = 0; i < fmts.length; i++) {
						let fmt = fmts[i];
						if(fmt.mimeType.indexOf("video/mp4") == 0 && fmt.url != null)
						{
							resultFmts.push({
								format:"mp4",
								mime_type:"video/mp4",
								quality:Math.min(fmt.width,fmt.height) + "p",
								codec:null,
								url: fmt.url
							})
						}
					}
				}
				this._formats = resultFmts;
			}
			return this._formats;
		}
	};
	download_manager.download = function(fmt) {
		let url = fmt.url;
		let mime_type = fmt.mime_type;
		let dl_elm = document.createElement("a");
		dl_elm.href = url;
		dl_elm.download = url.substring(url.lastIndexOf('/')+1).replace(/\.[^/.]+$/, "." + fmt.format);
		dl_elm.click();
	}
	return download_manager;
})()

if(typeof completion === "undefined")
{
	console.log(JSON.stringify(_video_download.formats))
}else{
	completion(_video_download.formats);
}